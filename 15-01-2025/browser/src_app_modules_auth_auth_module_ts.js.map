{"version":3,"file":"src_app_modules_auth_auth_module_ts.js","mappings":"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","sources":["./src/app/modules/auth/auth-routing.module.ts","./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/auth.service.ts","./src/app/modules/auth/login/login.component.ts","./src/app/modules/auth/login/login.component.html","./src/app/modules/auth/register/register.component.ts","./src/app/modules/auth/register/register.component.html","./src/app/modules/auth/toast/toast.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { ToastComponent } from './toast/toast.component';\n\n\n\n@NgModule({\n  declarations: [\n    RegisterComponent,\n    LoginComponent,\n    ToastComponent\n  ],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class AuthModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private apiUrl = '/api/auth/';  // Update with your API URL\n\n  constructor(private http: HttpClient) {}\n\n  register(userData: any): Observable<any> {\n    return this.http.post(this.apiUrl + 'register', userData);\n  }\n\n  login(credentials: any): Observable<any> {\n    return this.http.post(this.apiUrl + 'login', credentials);\n  }\n}\n","import { Component, ViewChild, Inject, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { ToastComponent } from '../toast/toast.component';\nimport { TokenStorageService } from '../token-storage.service';\nimport { PLATFORM_ID } from \"@angular/core\";\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n  credentials = {\n    username: '',\n    password: ''\n  };\n\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n\n  @ViewChild(ToastComponent) toast!: ToastComponent;\n\n  constructor(private authService: AuthService, private router: Router, private tokenStorage: TokenStorageService, @Inject(PLATFORM_ID) private platformId: any) {}\n\n  ngOnInit(): void {\n    if(isPlatformBrowser(this.platformId)) {\n      if (this.tokenStorage.getToken()) {\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getUser().roles;\n      }\n    }\n  }\n\n  onLogin() {\n    this.authService.login(this.credentials).subscribe(\n      response => {\n        this.tokenStorage.saveToken(response.token);\n        this.tokenStorage.saveUser(response);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        /* this.roles = this.tokenStorage.getUser().roles; */\n        this.reloadPage();\n      },\n      error => {\n        console.error('Login failed', error);\n        this.showToast('Login failed. Please check your credentials.');\n      }\n    );\n  }\n\n  showToast(message: string) {\n    this.toast.display(message);\n  }\n\n  reloadPage(): void {\n    window.location.reload();\n  }\n}\n","<div class=\"flex items-center justify-center h-screen bg-gray-100\" *ngIf=\"!isLoggedIn\">\n  <div class=\"bg-white p-8 rounded-lg shadow-md w-96\">\n    <h2 class=\"text-2xl font-bold mb-6 text-center\">Login</h2>\n    <form (ngSubmit)=\"onLogin()\">\n      <div class=\"mb-4\">\n        <label for=\"username\" class=\"block text-sm font-medium text-gray-700\">Username:</label>\n        <input type=\"text\" id=\"username\" name=\"username\" [(ngModel)]=\"credentials.username\" required class=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\" placeholder=\"Enter your username\">\n      </div>\n      <div class=\"mb-6\">\n        <label for=\"password\" class=\"block text-sm font-medium text-gray-700\">Password:</label>\n        <input type=\"password\" id=\"password\" name=\"password\" [(ngModel)]=\"credentials.password\" required class=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\" placeholder=\"Enter your password\">\n      </div>\n      <button type=\"submit\" class=\"w-full bg-blue-500 text-white py-2 rounded-md hover:bg-blue-600\">Login</button>\n    </form>\n    <app-toast></app-toast>\n  </div>\n</div>\n\n<div class=\"flex items-center justify-center h-screen bg-gray-100\" *ngIf=\"isLoggedIn\">\n  <h2 class=\"text-2xl font-bold mb-6 text-center\">You are already logged in.</h2>\n</div>\n","import { Component } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n  userData = {\n    username: '',\n    email: '',\n    fullname: '',\n    password: ''\n  };\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  onRegister() {\n    this.authService.register(this.userData).subscribe(\n      response => {\n        console.log('Registration successful', response);\n        this.router.navigate(['/login']);\n      },\n      error => {\n        console.error('Registration failed', error);\n      }\n    );\n  }\n}\n","<div class=\"flex items-center justify-center h-screen bg-gray-100\">\n  <div class=\"bg-white p-8 rounded-lg shadow-md w-96\">\n    <h2 class=\"text-2xl font-bold mb-6 text-center\">Register</h2>\n    <form (ngSubmit)=\"onRegister()\">\n      <div class=\"mb-4\">\n        <label for=\"username\" class=\"block text-sm font-medium text-gray-700\">Username:</label>\n        <input type=\"text\" id=\"username\" name=\"username\" [(ngModel)]=\"userData.username\" required class=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\" placeholder=\"Enter your username\">\n      </div>\n      <div class=\"mb-4\">\n        <label for=\"email\" class=\"block text-sm font-medium text-gray-700\">Email:</label>\n        <input type=\"email\" id=\"email\" name=\"email\" [(ngModel)]=\"userData.email\" required class=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\" placeholder=\"Enter your email\">\n      </div>\n      <div class=\"mb-4\">\n        <label for=\"fullname\" class=\"block text-sm font-medium text-gray-700\">Full Name:</label>\n        <input type=\"text\" id=\"fullname\" name=\"fullname\" [(ngModel)]=\"userData.fullname\" required class=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\" placeholder=\"Enter your full name\">\n      </div>\n      <div class=\"mb-6\">\n        <label for=\"password\" class=\"block text-sm font-medium text-gray-700\">Password:</label>\n        <input type=\"password\" id=\"password\" name=\"password\" [(ngModel)]=\"userData.password\" required class=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\" placeholder=\"Enter your password\">\n      </div>\n      <button type=\"submit\" class=\"w-full bg-blue-500 text-white py-2 rounded-md hover:bg-blue-600\">Register</button>\n    </form>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-toast',\n  template: `\n    <div *ngIf=\"show\" class=\"fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50\">\n      <div class=\"bg-red-500 text-white p-4 rounded-md shadow-lg\">\n        {{ message }}\n        <button (click)=\"close()\" class=\"ml-4 text-white underline\">Close</button>\n      </div>\n    </div>\n  `,\n  styles: []\n})\nexport class ToastComponent {\n  @Input() message: string = '';\n  show: boolean = false;\n\n  display(message: string) {\n    this.message = message;\n    this.show = true;\n    setTimeout(() => this.close(), 3000); // Automatically close after 3 seconds\n  }\n\n  close() {\n    this.show = false;\n  }\n}\n"],"names":["RouterModule","LoginComponent","RegisterComponent","routes","path","redirectTo","pathMatch","component","AuthRoutingModule","forChild","imports","i1","exports","CommonModule","FormsModule","ReactiveFormsModule","ToastComponent","AuthModule","declarations","AuthService","constructor","http","apiUrl","register","userData","post","login","credentials","i0","ɵɵinject","HttpClient","factory","ɵfac","providedIn","PLATFORM_ID","isPlatformBrowser","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_div_0_Template_form_ngSubmit_4_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","onLogin","LoginComponent_div_0_Template_input_ngModelChange_8_listener","$event","ctx_r4","username","LoginComponent_div_0_Template_input_ngModelChange_12_listener","ctx_r5","password","ɵɵelement","ɵɵadvance","ɵɵproperty","ctx_r0","authService","router","tokenStorage","platformId","isLoggedIn","isLoginFailed","errorMessage","roles","ngOnInit","getToken","getUser","subscribe","response","saveToken","token","saveUser","reloadPage","error","console","showToast","message","toast","display","window","location","reload","ɵɵdirectiveInject","i2","Router","i3","TokenStorageService","selectors","viewQuery","LoginComponent_Query","rf","ctx","ɵɵtemplate","LoginComponent_div_0_Template","LoginComponent_div_1_Template","email","fullname","onRegister","log","navigate","decls","vars","consts","template","RegisterComponent_Template","RegisterComponent_Template_form_ngSubmit_4_listener","RegisterComponent_Template_input_ngModelChange_8_listener","RegisterComponent_Template_input_ngModelChange_12_listener","RegisterComponent_Template_input_ngModelChange_16_listener","RegisterComponent_Template_input_ngModelChange_20_listener","ToastComponent_div_0_Template_button_click_3_listener","_r2","ctx_r1","close","ɵɵtextInterpolate1","show","setTimeout","inputs","ToastComponent_Template","ToastComponent_div_0_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}